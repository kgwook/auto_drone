<launch>

    <arg name="world_file_name"    default="YOLO_test_4" />
    <arg name="world_path" default="$(find pkg1)/sim/map/$(arg world_file_name).world" />
    <!-- Define a static transform from a camera internal frame to the fcu for every camera used -->
   <!-- <arg name="pointcloud_topics" default="[/camera/depth/points]"/>-->
    <node pkg="tf" type="static_transform_publisher" name="main"
          args="0 0 0 0 0 0 map local_origin 10"/> 


    <node pkg="tf" type="static_transform_publisher" name="tf_depth_camera"
          args="0 0 0 -1.57 0 -1.57 fcu camera_link 10"/>
<!--
    <node pkg="tf" type="static_transform_publisher" name="tf_depth_camera"
          args="0 0 0 -1.57 0 -1.57 fcu camera_link 10"/>
-->
    <arg name="gui" default="false"/>
    <arg name="ns" default="/"/>
    <arg name="model" default="iris_standardcamera"/>
    <arg name="fcu_url" default="udp://:14540@127.0.0.1:14557"/>
    <arg name="gcs_url" default="" />   <!-- GCS link is provided by SITL -->
    <arg name="tgt_system" default="1" />
    <arg name="tgt_component" default="1" />
    <arg name="vehicle" default="iris"/>
    <param name="use_sim_time" value="true" />

    <!-- Launch PX4 SITL -->
    <include file="$(find px4)/launch/px4.launch">
        <arg name="vehicle" value="$(arg vehicle)"/>
    </include>

    <!-- Launch MavROS -->
  <group ns="$(arg ns)">
        <include file="$(find mavros)/launch/node.launch">
            <arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
            <arg name="fcu_url" value="$(arg fcu_url)" />
            <arg name="gcs_url" value="$(arg gcs_url)" />
            <arg name="tgt_system" value="$(arg tgt_system)" />
            <arg name="config_yaml" value="$(find pkg1)/launch/px4_config.yaml" />
            <arg name="tgt_component" value="$(arg tgt_component)" />
        </include>
    </group>

-->
    <!-- Launch Gazebo -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="gui" value="$(arg gui)"/>
        <arg name="world_name" value="$(arg world_path)" />
    </include>

    <!-- octomap -->
    	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
	<param name="resolution" value="0.1" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
	<param name="frame_id" type="string" value="map" />
		
		<!-- maximum range to integrate (speedup!) -->
	<param name="sensor_model/max_range" value="10.0" />
		
		<!-- data source to integrate (PointCloud2) -->
	<remap from="cloud_in" to="/camera/depth/points" />
	
	</node>

   

</launch>
